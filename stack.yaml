AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Resources:
  Vpc:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: 'VPC assassins slack bot'
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
      - Key: Name
        Value: Slack Assasins IGW
  VPCGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref Vpc
      InternetGatewayId: !Ref InternetGateway
  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: us-east-1a
      CidrBlock: 10.0.0.0/20
      MapPublicIpOnLaunch: true
      VpcId: !Ref Vpc
  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: us-east-1b
      CidrBlock: 10.0.16.0/20
      MapPublicIpOnLaunch: true
      VpcId: !Ref Vpc
  RouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref Vpc
      Tags:
      - Key: Name
        Value: 'RouteTable created by CF'
  RouteTable1Association:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet1
      RouteTableId: !Ref RouteTable
  RouteTable2Association:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet2
      RouteTableId: !Ref RouteTable
  InternetRouteRule:
    Type: AWS::EC2::Route
    DependsOn: VPCGatewayAttachment
    Properties:
      RouteTableId: !Ref RouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  PlayerLoaderBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "${AWS::StackName}-player-load-bucket"

  PlayerTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: slack_handle
          AttributeType: S
        - AttributeName: code_name
          AttributeType: S
        - AttributeName: status
          AttributeType: S
      GlobalSecondaryIndexes:
        - IndexName: AgentStatusIndex
          KeySchema:
            - AttributeName: status
              KeyType: HASH
            - AttributeName: code_name
              KeyType: RANGE
          Projection:
            ProjectionType: KEYS_ONLY
          ProvisionedThroughput:
            ReadCapacityUnits:  1
            WriteCapacityUnits: 1
      KeySchema:
        - AttributeName: slack_handle
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      TableName: !Sub "${AWS::StackName}-player-table"

  LoadPlayerTableFn:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./target/
      Handler: lambdas.create_agents
      Runtime: python3.6
      Timeout: 900
      Events:
        PlayerCSVUpload:
          Type: S3
          Properties:
              Bucket: !Ref PlayerLoaderBucket
              Events: s3:ObjectCreated:*
      Environment:
        Variables:
          PLAYER_TABLE: !Ref PlayerTable
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref PlayerTable
        - S3ReadPolicy:
            BucketName: "*"
